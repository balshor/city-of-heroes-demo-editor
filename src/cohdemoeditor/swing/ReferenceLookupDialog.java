/*
 * ReferenceLookupDialog.java
 *
 * Created on July 26, 2007, 3:57 PM
 */

package cohdemoeditor.swing;

import java.util.*;
import javax.swing.*;

import cohdemoeditor.DemoReference;
import cohdemoeditor.DemoReferenceList;

/**
 * This class defines a dialog window that allows the user to search for
 * references numbers by the character names defined by the "NEW" command.
 * Results are automatically input into a target JTextField.
 * 
 * @author Darren Lee
 */
@SuppressWarnings("serial")
public class ReferenceLookupDialog extends JDialog {

	private DemoReferenceList referenceList;
	private JTextField target;
	private Action searchAction;

	/** Creates new form ReferenceLookupDialog */
	public ReferenceLookupDialog(java.awt.Frame parent, DemoReferenceList refs,
			JTextField target, boolean modal) {
		super(parent, modal);
		initVars(refs, target);
		initComponents();
	}

	/** Creates new form ReferenceLookupDialog */
	public ReferenceLookupDialog(java.awt.Dialog parent,
			DemoReferenceList refs, JTextField target, boolean modal) {
		super(parent, modal);
		initVars(refs, target);
		initComponents();
	}

	/**
	 * Helper method to initialize this object.
	 * 
	 * @param refs
	 * @param target
	 */
	private void initVars(DemoReferenceList refs, JTextField target) {
		referenceList = refs;
		this.target = target;
		searchAction = new AbstractAction("Search") {
			public void actionPerformed(java.awt.event.ActionEvent e) {
				String charName = cField.getText().trim();
				Set<Integer> refSet = searchFor(charName);

				if (refSet == null)
					return;
				String rStr = "";
				for (Integer i : refSet) {
					rStr += " " + i;
				}
				rStr = rStr.trim();
				if (rStr.equals("")) {
					rField.setText("(name not found)");
				} else {
					// Input the results in our results field.
					rField.setText(rStr.trim());

					// Input the results in the target text field. Put new refs
					// and old refs in a set to eliminate collisions.
					String str = ReferenceLookupDialog.this.target.getText()
							.trim()
							+ " ";
					String[] oldRefs = str.split(" ");
					Set<String> refsForTarget = new HashSet<String>();
					for (String s : oldRefs) {
						refsForTarget.add(s);
					}
					for (Integer i : refSet) {
						refsForTarget.add(i.toString());
					}
					rStr = "";
					for (String s : refsForTarget) {
						rStr += " " + s;
					}
					ReferenceLookupDialog.this.target.setText(rStr.trim());
				}
			}
		};
	}

	/**
	 * Finds all reference numbers with the given name.
	 * 
	 * @param charName
	 * @return
	 */
	private Set<Integer> searchFor(String charName) {
		if (referenceList == null)
			return null;
		HashSet<Integer> set = new HashSet<Integer>();
		for (DemoReference ref : referenceList) {
			String[] names = ref.getNames();
			for (String name : names) {
				if (charName.equals(name)) {
					set.add(ref.getReferenceNumber());
				}
			}
		}
		return set;
	}

	/**
	 * Simple setter for the DemoReferenceList where this dialog searches for
	 * matches.
	 * 
	 * @param refs
	 */
	public void setDemoReferenceList(DemoReferenceList refs) {
		referenceList = refs;
	}

	/**
	 * Simple getter for the DemoReferenceList where this dialog searches for
	 * matches.
	 * 
	 * @return
	 */
	public DemoReferenceList getDemoReferenceList() {
		return referenceList;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		southPanel = new javax.swing.JPanel();
		searchButton = new javax.swing.JButton();
		clearButton = new javax.swing.JButton();
		helpButton = new javax.swing.JButton();
		centerPanel = new javax.swing.JPanel();
		cLabel = new javax.swing.JLabel();
		cField = new javax.swing.JTextField();
		rLabel = new javax.swing.JLabel();
		rField = new javax.swing.JTextField();

		getContentPane().setLayout(new java.awt.BorderLayout(1, 1));

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Find Reference Numbers");
		searchButton.setAction(searchAction);
		searchButton.setMnemonic('S');
		searchButton.setText("Search");
		searchButton
				.setToolTipText("Searchs for references numbers for the given name.  Inputs any results in the \"Add Filter\" dialog.");
		southPanel.add(searchButton);

		clearButton.setMnemonic('C');
		clearButton.setText("Clear");
		clearButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				clearButtonActionPerformed(evt);
			}
		});

		southPanel.add(clearButton);

		helpButton.setMnemonic('H');
		helpButton.setText("Help");
		helpButton
				.setToolTipText("Do you really need help to figure out what a help button does?");
		helpButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				helpButtonActionPerformed(evt);
			}
		});

		southPanel.add(helpButton);

		getContentPane().add(southPanel, java.awt.BorderLayout.SOUTH);

		centerPanel.setLayout(new java.awt.GridLayout(4, 0));

		centerPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(5, 5, 5, 5)));
		cLabel.setText("Character Name");
		centerPanel.add(cLabel);

		cField.setComponentPopupMenu(DemoEditor.TEXT_FIELD_POPUP_MENU);
		cField.setToolTipText("Enter the name to search for.");
		cField.setAction(searchAction);
		centerPanel.add(cField);

		rLabel.setText("Reference Numbers:");
		centerPanel.add(rLabel);

		rField.setEditable(false);
		rField.setToolTipText("Search results will be displayed here.");
		centerPanel.add(rField);

		getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

		pack();
	}

	// </editor-fold>//GEN-END:initComponents

	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_clearButtonActionPerformed
		cField.setText("");
		rField.setText("");
	}// GEN-LAST:event_clearButtonActionPerformed

	private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_helpButtonActionPerformed
		JOptionPane
				.showMessageDialog(
						this,
						"Enter the name of a character in the demo.  All references with that character name will be added to the filter.\nThis dialog will automatically close when the \"Add Filter\" dialog is closed.",
						"Temporary Help Message",
						JOptionPane.INFORMATION_MESSAGE);
	}// GEN-LAST:event_helpButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField cField;
	private javax.swing.JLabel cLabel;
	private javax.swing.JPanel centerPanel;
	private javax.swing.JButton clearButton;
	private javax.swing.JButton helpButton;
	private javax.swing.JTextField rField;
	private javax.swing.JLabel rLabel;
	private javax.swing.JButton searchButton;
	private javax.swing.JPanel southPanel;
	// End of variables declaration//GEN-END:variables

}
