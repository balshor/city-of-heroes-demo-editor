/*
 * TimeScaleDialog.java
 *
 * Created on June 23, 2005, 10:55 PM
 */

package cohdemoeditor.swing;

import javax.swing.JOptionPane;

import cohdemoeditor.DemoCommandList;

/**
 * This dialog provides a user interface for scaling the times in a demo.
 * 
 * @author Darren Lee
 */
@SuppressWarnings("serial")
public class TimeScaleDialog extends JCenteringDialog {

	private DemoCommandList target;

	/** Creates new form TimeScaleDialog */
	public TimeScaleDialog(DemoCommandList target) {
		super(DemoEditor.getEditor(), true);
		this.target = target;
		initComponents();
	}

	/**
	 * Helper method to enable or disable parts of the user interface depending
	 * on whether the user has selected scaling by time or scaling by ratio
	 */
	private void refreshMode() {
		boolean isTime = timeButton.isSelected();
		startLabel.setEnabled(isTime);
		startSpinner.setEnabled(isTime);
		endLabel.setEnabled(isTime);
		endSpinner.setEnabled(isTime);
		ratioLabel.setEnabled(!isTime);
		ratioField.setEnabled(!isTime);
	}

	/**
	 * Resets the user interface to its initial values
	 */
	private void reset() {
		startSpinner.setValue(0);
		endSpinner.setValue(0);
		ratioField.setText("");
		timeButton.setSelected(true);
		refreshMode();
	}

	/**
	 * Attempts to validate the user input. Mostly ensures that the spinners are
	 * committed or that the double in the ratio text field is parseable.
	 * Displays an error message if the input is invalid.
	 * 
	 * @return true if the input is valid, false otheriwise
	 */
	private boolean validateInput() {
		if (timeButton.isSelected()) {
			try {
				startSpinner.commitEdit();
				endSpinner.commitEdit();
			} catch (java.text.ParseException e) {
				JOptionPane.showMessageDialog(this,
						"Could not parse start/end values.", "Parse Error",
						JOptionPane.ERROR_MESSAGE);
				return false;
			}
		} else {
			try {
				double value = Double.valueOf(ratioField.getText());
				if (value <= 0)
					return false;
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(this,
						"Please enter a decimal ratio greater than zero.",
						"Parse Error", JOptionPane.ERROR_MESSAGE);
				return false;
			}
		}
		return true;
	}

	/**
	 * Helper method to do the actual rescaling by delegating to DemoCommandList.scaleTimes
	 */
	private void doRescaling() {
		if (timeButton.isSelected()) {
			DemoEditor.getEditor().addUndoableEdit(target.scaleTimes((Integer) startSpinner
					.getValue(), (Integer) endSpinner.getValue()));
		} else {
			DemoEditor.getEditor().addUndoableEdit(target.scaleTimes(Double.valueOf(ratioField
					.getText())));
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		buttonGroup = new javax.swing.ButtonGroup();
		jDoubleTextField1 = new cohdemoeditor.swing.JDoubleTextField();
		southPanel = new javax.swing.JPanel();
		okayButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		helpButton = new javax.swing.JButton();
		centerPanel = new javax.swing.JPanel();
		timeButton = new javax.swing.JRadioButton();
		timePanel = new javax.swing.JPanel();
		startLabel = new javax.swing.JLabel();
		startSpinner = new javax.swing.JSpinner();
		endLabel = new javax.swing.JLabel();
		endSpinner = new javax.swing.JSpinner();
		ratioButton = new javax.swing.JRadioButton();
		ratioPanel = new javax.swing.JPanel();
		ratioLabel = new javax.swing.JLabel();
		ratioField = new cohdemoeditor.swing.JDoubleTextField();

		jDoubleTextField1.setText("jDoubleTextField1");

		setTitle("Scale Times");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		okayButton.setMnemonic('O');
		okayButton.setText("Okay");
		okayButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okayButtonActionPerformed(evt);
			}
		});

		southPanel.add(okayButton);

		cancelButton.setMnemonic('C');
		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		southPanel.add(cancelButton);

		helpButton.setMnemonic('H');
		helpButton.setText("Help");
		helpButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				helpButtonActionPerformed(evt);
			}
		});

		southPanel.add(helpButton);

		getContentPane().add(southPanel, java.awt.BorderLayout.SOUTH);

		centerPanel.setLayout(new java.awt.GridLayout(2, 0, 5, 0));

		centerPanel.setBorder(new javax.swing.border.EmptyBorder(
				new java.awt.Insets(5, 5, 5, 5)));
		buttonGroup.add(timeButton);
		timeButton.setSelected(true);
		timeButton.setText("Scale by time");
		timeButton.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				timeButtonItemStateChanged(evt);
			}
		});

		centerPanel.add(timeButton);

		timePanel.setLayout(new java.awt.GridLayout(2, 2, 5, 0));

		startLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		startLabel.setText("Start Time");
		timePanel.add(startLabel);

		timePanel.add(startSpinner);

		endLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		endLabel.setText("End Time");
		timePanel.add(endLabel);

		timePanel.add(endSpinner);

		centerPanel.add(timePanel);

		buttonGroup.add(ratioButton);
		ratioButton.setText("Scale by ratio");
		ratioButton.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				ratioButtonItemStateChanged(evt);
			}
		});

		centerPanel.add(ratioButton);

		ratioPanel.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

		ratioLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		ratioLabel.setText("Ratio");
		ratioLabel.setEnabled(false);
		ratioPanel.add(ratioLabel);

		ratioField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		ratioField.setText("1");
		ratioField.setEnabled(false);
		ratioPanel.add(ratioField);

		centerPanel.add(ratioPanel);

		getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

		pack();
	}

	// </editor-fold>//GEN-END:initComponents

	private void okayButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_okayButtonActionPerformed
		if (validateInput()) {
			doRescaling();
			setVisible(false);
		}
	}// GEN-LAST:event_okayButtonActionPerformed

	private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_helpButtonActionPerformed
		javax.swing.JOptionPane
				.showMessageDialog(
						this,
						"Use this dialog to scale the times of the visible commands to the specified parameters.",
						"Temporary Help Message",
						javax.swing.JOptionPane.INFORMATION_MESSAGE);
	}// GEN-LAST:event_helpButtonActionPerformed

	private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:
		// event_formWindowClosing
		reset();
	}// GEN-LAST:event_formWindowClosing

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_cancelButtonActionPerformed
		setVisible(false);
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void timeButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-
		// FIRST
		// :
		// event_timeButtonItemStateChanged
		refreshMode();
	}// GEN-LAST:event_timeButtonItemStateChanged

	private void ratioButtonItemStateChanged(java.awt.event.ItemEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_ratioButtonItemStateChanged
		refreshMode();
	}// GEN-LAST:event_ratioButtonItemStateChanged

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.ButtonGroup buttonGroup;
	private javax.swing.JButton cancelButton;
	private javax.swing.JPanel centerPanel;
	private javax.swing.JLabel endLabel;
	private javax.swing.JSpinner endSpinner;
	private javax.swing.JButton helpButton;
	private cohdemoeditor.swing.JDoubleTextField jDoubleTextField1;
	private javax.swing.JButton okayButton;
	private javax.swing.JRadioButton ratioButton;
	private cohdemoeditor.swing.JDoubleTextField ratioField;
	private javax.swing.JLabel ratioLabel;
	private javax.swing.JPanel ratioPanel;
	private javax.swing.JPanel southPanel;
	private javax.swing.JLabel startLabel;
	private javax.swing.JSpinner startSpinner;
	private javax.swing.JRadioButton timeButton;
	private javax.swing.JPanel timePanel;
	// End of variables declaration//GEN-END:variables

}
