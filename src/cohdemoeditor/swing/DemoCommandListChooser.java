/*
 * DemoCommandListChooser.java
 *
 * Created on June 15, 2005, 12:57 PM
 */

package cohdemoeditor.swing;

import javax.swing.*;

import cohdemoeditor.DemoCommandList;

import java.awt.event.*;

/**
 * This dialog provides the UI for a user to select a DemoCommandList from the
 * currently open DemoCommandLists in a DemoEditor. It contains a JList that
 * displays the current demos and buttons that allow the user to set which of
 * these demos is currently selected.
 * 
 * @author Darren Lee
 */
@SuppressWarnings("serial")
public class DemoCommandListChooser extends JCenteringDialog {

	private DemoCommandListEditor value;

	public static final DemoCommandListEditor UNITIALIZED_VALUE = new DemoCommandListEditor(
			new DemoCommandList());
	public static final String VALUE_PROPERTY = JOptionPane.VALUE_PROPERTY;

	/** Creates new form DemoCommandListChooser */
	public DemoCommandListChooser(java.awt.Frame parent) {
		super(parent, true);
		setDefaultCloseOperation(HIDE_ON_CLOSE);
		addWindowListener(new WindowAdapter() {
			@SuppressWarnings("unused")
			public void windowClosing() {
				close();
			}
		});
		value = UNITIALIZED_VALUE;
		initComponents();
	}

	/**
	 * Creates new DemoCommandListChooser
	 * 
	 * @param parent
	 * @param editor
	 */
	public DemoCommandListChooser(javax.swing.JDialog parent) {
		super(parent, true);
		setDefaultCloseOperation(HIDE_ON_CLOSE);
		addWindowListener(new WindowAdapter() {
			@SuppressWarnings("unused")
			public void windowClosing() {
				close();
			}
		});
		value = UNITIALIZED_VALUE;
		initComponents();
	}

	/**
	 * Clears the selection on close, reseting the chooser for the next use.
	 */
	public void close() {
		list.clearSelection();
		setValue(UNITIALIZED_VALUE);
		setVisible(false);
	}

	/**
	 * Sets the currently selected DemoCommandListEditor
	 * @param newValue
	 */
	public void setValue(DemoCommandListEditor newValue) {
		if (value == newValue)
			return;
		DemoCommandListEditor oldValue = value;
		value = newValue;
		firePropertyChange(VALUE_PROPERTY, oldValue, newValue);
	}

	/**
	 * Gets the currently selected DemoCommandListEditor
	 * @return
	 */
	public DemoCommandListEditor getValue() {
		return value;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		eastPanel = new javax.swing.JPanel();
		buttonPanel = new javax.swing.JPanel();
		selectButton = new javax.swing.JButton();
		loadButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		centerPanel = new javax.swing.JPanel();
		scroller = new javax.swing.JScrollPane();
		list = new javax.swing.JList();
		instructionLabel = new javax.swing.JLabel();

		setTitle("Select a Demo");
		buttonPanel.setLayout(new java.awt.GridLayout(3, 1));

		selectButton.setText("Select");
		selectButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				selectButtonActionPerformed(evt);
			}
		});

		buttonPanel.add(selectButton);

		loadButton.setText("Load Demo");
		loadButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				loadButtonActionPerformed(evt);
			}
		});

		buttonPanel.add(loadButton);

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		buttonPanel.add(cancelButton);

		eastPanel.add(buttonPanel);

		getContentPane().add(eastPanel, java.awt.BorderLayout.EAST);

		centerPanel.setLayout(new java.awt.BorderLayout());

		list.setModel(DemoEditor.getEditor().getListModel());
		list.setPreferredSize(new java.awt.Dimension(200, 100));
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		scroller.setViewportView(list);

		centerPanel.add(scroller, java.awt.BorderLayout.CENTER);

		getContentPane().add(centerPanel, java.awt.BorderLayout.CENTER);

		instructionLabel
				.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		instructionLabel.setText("Please Select a Demo");
		getContentPane().add(instructionLabel, java.awt.BorderLayout.NORTH);

		pack();
	}

	// </editor-fold>//GEN-END:initComponents

	private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_loadButtonActionPerformed
		DemoEditor.getEditor().loadDemo();
	}// GEN-LAST:event_loadButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_cancelButtonActionPerformed
		setValue(null);
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_selectButtonActionPerformed
		Object selected = list.getSelectedValue();
		if (selected instanceof DemoCommandListEditor) {
			setValue((DemoCommandListEditor) selected);
			close();
		} else {
			throw new ClassCastException(
					"DemoCommandListChooser's selected object \"" + selected
							+ "\" is a \"" + selected.getClass());
		}
	}// GEN-LAST:event_selectButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel buttonPanel;
	private javax.swing.JButton cancelButton;
	private javax.swing.JPanel centerPanel;
	private javax.swing.JPanel eastPanel;
	private javax.swing.JLabel instructionLabel;
	private javax.swing.JList list;
	private javax.swing.JButton loadButton;
	private javax.swing.JScrollPane scroller;
	private javax.swing.JButton selectButton;
	// End of variables declaration//GEN-END:variables

}
